'use client'

import { Button } from "@/components/ui/button"
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { useState } from "react"

export const RegisterForm = () => {
    const [firstname, setFirstname] = useState('')
    const [lastname, setLastname] = useState('')
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    
    const onSubmit = async (e: React.FormEvent) => {
        e.preventDefault()
         
        try {
            const res = await fetch('../../api/register', {
                method: 'POST',
                body: JSON.stringify({
                    firstname,
                    lastname,
                    email,
                    password
                }),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            if (res.ok) {
                //redirect
            }
        } catch (error) {
            console.error(error)
        }

        console.log('Register!')
    }
    return (
        <form onSubmit={onSubmit}className='space-y-8 space-h-8'>
            <div className='grid w-full max-w-sm items-center gap-1.5 grid-cols-2 justify-items-center'>
                <div>
                    <Label
                    htmlFor='firstname'>Firstname</Label>
                    <Input 
                        value={firstname}
                        onChange={(e) => setFirstname(e.target.value)}
                        id='firstname' type='firstname' className='rounded'
                    />
                </div>
                <div className="ml-2">
                    <Label htmlFor='lastname'>Lastname</Label>
                    <Input 
                        value={lastname}
                        onChange={(e) => setLastname(e.target.value)}
                        id='lastname' type='lastname' className='rounded'
                    />
                </div>
            </div>
            <div className='grid w-full max-w-sm items-center gap-1.5'>
                <Label htmlFor='email'>Email</Label>
                <Input 
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    id='email' type='email' className='rounded'
                />
            </div>
            <div className='grid w-full max-w-sm items-center gap-1.5'>
                <Label htmlFor='password'>Password</Label>
                <Input 
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    id='password' type='password' className='rounded'
                />
            </div>
            <div className="w-full">
                <Button type='submit' className='w-full rounded  bg-[#444] text-white 
                hover:bg-[#333]' style={{fontWeight: 'bold'}}>Register</Button>
            </div>
        </form>
    )
}